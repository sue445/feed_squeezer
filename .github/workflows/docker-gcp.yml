name: docker-gcp

on:
  push:
    tags:
      - "*"
    branches:
      - main

  # Run builds for any PRs.
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths-ignore:
      - "doc/**"
      - "testdata/**"
      - "*_test.go"
      - "*.md"

  # push image to ArtifactRegistry at any timing
  workflow_dispatch:

env:
  # e.g. projects/123456789/locations/global/workloadIdentityPools/github-actions/providers/github-actions
  WORKLOAD_IDENTITY_PROVIDER: "projects/168273907656/locations/global/workloadIdentityPools/feed-squeezer/providers/github-actions"

  # e.g. terraform@GCP_PROJECT_ID.iam.gserviceaccount.com
  SERVICE_ACCOUNT_EMAIL: "deployer@feed-squeezer.iam.gserviceaccount.com"

permissions:
  contents: read
  id-token: write

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            us-docker.pkg.dev/feed-squeezer/feed-squeezer/app
          tags: |
            type=sha,format=long
            type=edge,branch=main
            type=ref,event=tag

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}
          token_format: access_token

      - uses: docker/login-action@v3
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Login to Artifact Registry
        run: echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://us-docker.pkg.dev

      - name: Set SHORT_SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ (github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main')) || github.event_name == 'workflow_dispatch' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: REVISION=${{ env.SHORT_SHA }}

      - name: Test image
        run: docker run --rm ${IMAGE_ID} -version
        env:
          IMAGE_ID: ${{ steps.build.outputs.imageid }}

      - name: Slack Notification
        uses: act10ns/slack@v2
        if: always()
        continue-on-error: true
        with:
          status: ${{ job.status }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
